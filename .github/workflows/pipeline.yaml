name: .NET Build, Unit, and Integration Tests, and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build, Test and Publish
    runs-on: self-hosted

    steps:
    - name: Backup existing code and logs
      run: |
        TIMESTAMP=$(date +"%Y-%m-%d-%H:%M:%S")
        CONTAINER_NAME="ocelot_container"
        LOG_FILE="/home/natan/backups/ocelot-logs-$TIMESTAMP.log"
        docker logs $CONTAINER_NAME > $LOG_FILE        
        zip -r /home/natan/backups/ocelot-backup-$TIMESTAMP.zip ${{ github.workspace }} $LOG_FILE
        rm $LOG_FILE

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check running user
      run: whoami
      
    # removido pois no meu host já tenho as versões do dotnet instaladas
    # - name: Setup .NET SDK 8.x
    #   uses: actions/setup-dotnet@v3
    #   with:
    #     dotnet-version: '8.x'
    
    - name: Restore dependencies
      run: dotnet restore Tech.Challenge.Api.Gateway/Tech.Challenge.Api.Gateway.sln
      
    - name: Build the project
      run: dotnet build Tech.Challenge.Api.Gateway/Tech.Challenge.Api.Gateway.sln --no-restore --configuration Release
     
    - name: Publish the project
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
      run: dotnet publish Tech.Challenge.Api.Gateway/Tech.Challenge.Api.Gateway.sln --no-build --configuration Release --output ${{ github.workspace }}/publish
      
    - name: Replace appsettings tech.challenge
      run: cp -f /home/natan/appsettings/ocelot/appsettings.json ${{ github.workspace }}/Tech.Challenge.Api.Gateway/Tech.Challenge.Api.Gateway/appsettings.json
    
    - name: Stop and remove existing containers
      run: |
        cd Tech.Challenge.Api.Gateway && docker-compose -f docker-compose.yaml down

    - name: Build Docker image
      run: |
        cd Tech.Challenge.Api.Gateway && sudo docker build -t ocelot:latest .

    - name: Deploy using Docker Compose
      run: |
        cd Tech.Challenge.Api.Gateway && docker-compose -f docker-compose.yaml up -d --build
